#include "/home/terra/TerraNG/terra/TerraNet.defs"

#define DIR_SAIDA 0
#define DIR_ENTRADA 1
#define TIPO_RECONHECIMENTO 0
#define TIPO_MOSTRAR_CAMINHO 1

pktype usrMsg from radioMsg with
    var ushort distancia;
    var ushort versao;
    var ubyte direcao;
    var ushort origem;
    var ubyte acenderLeds;
end

var ushort nodeId = getNodeId();
var ushort voltagem = 0;
var ushort menorDistancia = 10000;
var ushort melhorVizinho = 0;
var ushort versaoLocal = 0;
var ubyte acenderLeds = 0;
var usrMsg sndData;

sndData.target = BROADCAST;
sndData.source = nodeId;
sndData.origem = nodeId;

par do
    loop do
        par/and do
            emit REQ_VOLTS();
            voltagem = await VOLTS;
            if voltagem <= 990 or voltagem >= 1010 then
                emit LED0(ON);
                
                inc versaoLocal;
                sndData.versao = versaoLocal;
                
                sndData.distancia = 0;
                inc sndData.distancia;
                
                sndData.origem = nodeId;
                sndData.direcao = DIR_SAIDA;
                sndData.type = TIPO_RECONHECIMENTO;
                sndData.acenderLeds = 0;
                
                qPut(sndData);
            else
                emit LED0(OFF);
            end
        with
            await 10s;
        end
    end
with
    loop do
        var usrMsg recData = await RECEIVE;
        recData.direcao = DIR_ENTRADA;
        qPut(recData);
    end
with
    loop do
        await Q_READY;
        loop do
            if qSize() == 0 then
                break;
            end
            var usrMsg recData;
            qGet(recData);
            if recData.direcao == DIR_SAIDA then
                emit SEND(recData);
                await SEND_DONE;
            else
                if recData.type == TIPO_RECONHECIMENTO then
                    if recData.versao > versaoLocal then
                        versaoLocal = recData.versao;
                        menorDistancia = 10000;
                        melhorVizinho = 0;
                        acenderLeds = 0;
                    end
                    if recData.versao == versaoLocal then
                        if recData.distancia < menorDistancia and recData.origem != nodeId then
                            // Salva a menor distancia
                            menorDistancia = recData.distancia;
                            melhorVizinho = recData.source;
                            
                            // Prepara a mensagem para repassar aos proximos nÃ³s
                            inc recData.distancia;
                            recData.source = nodeId;
                            recData.direcao = DIR_SAIDA;
                            if nodeId == 11 then
                                recData.target = melhorVizinho;
                                recData.type = TIPO_MOSTRAR_CAMINHO;
                                acenderLeds = 5;
                                recData.acenderLeds = acenderLeds;
                            end
                            qPut(recData);
                        end
                    end
                else/if recData.type == TIPO_MOSTRAR_CAMINHO then
                    acenderLeds = recData.acenderLeds;
                    if recData.origem != nodeId then
                        recData.source = nodeId;
                        recData.target = melhorVizinho;
                        recData.direcao = DIR_SAIDA;
                        qPut(recData);
                    end
                end
            end
            await (nodeId) ms;
        end
    end
with
    loop do
        emit LEDS(acenderLeds);
        await (nodeId*100) ms;
    end
end
